@import "normalize";
@import "color";

/* base default*/
$basefontsize: 16;
html, body {
  padding: 0;
  margin: 0;
  scroll-behavior: smooth;
}
body {
  font-family: "Helvetica Neue",
  Arial,
  "Hiragino Kaku Gothic ProN",
  "Hiragino Sans",
  Meiryo,
  sans-serif;
}

* {
  box-sizing: border-box;

  &::before, &::after {
    box-sizing: border-box;
  }
}

html {
  line-height: 1.6;
  letter-spacing: 0.1em;
  font-size: $basefontsize + px;
  
}

ul {
  list-style: none;
  padding: 0;
  margin: 0;
}

p {
  margin: 0;
  letter-spacing: .05em;
}

a {
  text-decoration: none;
  color: inherit;
  &:hover {
    cursor: pointer;
  }
}

hr {
  background-color: #D0D3DC;
  opacity: 0.8;
}

img {
  max-width: 100%;
  height: auto;
}

:lang(en){
  font-family: 'Montserrat', sans-serif;
}

@function rem($pixels, $context: $basefontsize) { 
  @return $pixels / $context * 1rem;
}


$layout-width-inner: 1440px;
$breakpoints: (
  "small": "screen and (max-width: 425px)",
  "sp": "screen and (max-width: 767px)",
  "tab": " (max-width: 1020px) and (min-width: 768px) ", 
  "note": " (max-width: 1439px) and (min-width: 1021px) ",
  "pc": "screen and (min-width: #{$layout-width-inner})"
);

@mixin mq($breakpoint: sp) {

  @media #{map-get($breakpoints, $breakpoint)} {

    @content;
  }
}


@keyframes fadeIn {
  from { opacity: 0; }
    to { opacity: 1; }
}

@keyframes fadeOut {
  from { opacity: 1; }
    to { opacity: 0; }
}

@keyframes slideIn {
from { transform: translateY(15%); }
  to { transform: translateY(0); }
}

@keyframes slideOut {
  from { transform: translateY(0); }
  to { transform: translateY(-10%); }
}


